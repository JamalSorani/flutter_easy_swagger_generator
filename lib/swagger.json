{
    "openapi": "3.0.0",
    "paths": {
        "/v1/auth/email/login": {
            "post": {
                "operationId": "AuthController_login",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthEmailLoginDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/v1/auth/email/register": {
            "post": {
                "operationId": "AuthController_register",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRegisterLoginDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/v1/auth/email/confirm": {
            "post": {
                "operationId": "AuthController_confirmEmail",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthConfirmEmailDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/v1/auth/email/confirm/new": {
            "post": {
                "operationId": "AuthController_confirmNewEmail",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthConfirmEmailDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/v1/auth/forgot/password": {
            "post": {
                "operationId": "AuthController_forgotPassword",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthForgotPasswordDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/v1/auth/reset/password": {
            "post": {
                "operationId": "AuthController_resetPassword",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthResetPasswordDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "operationId": "AuthController_refresh",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "refreshToken": []
                    }
                ]
            }
        },
        "/v1/auth/logout": {
            "post": {
                "operationId": "AuthController_logout",
                "parameters": [],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/auth/me": {
            "patch": {
                "operationId": "AuthController_update",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthUpdateDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            },
            "delete": {
                "operationId": "AuthController_delete",
                "parameters": [],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            },
            "get": {
                "operationId": "AuthController_getCurrentUser",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "current user info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/users": {
            "get": {
                "operationId": "UserController_getUsers",
                "parameters": [
                    {
                        "name": "order",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Order"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "int": true,
                        "schema": {
                            "minimum": 1,
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "int": true,
                        "schema": {
                            "minimum": 1,
                            "maximum": 50,
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "q",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get users list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponsePagingDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "accessToken": []
                    },
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/users/{id}": {
            "get": {
                "operationId": "UserController_getUser",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get users list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/photos/single": {
            "post": {
                "operationId": "PhotosController_uploadSingle",
                "summary": "Upload single photo",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Photos"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/photos/multiple": {
            "post": {
                "operationId": "PhotosController_uploadMultiple",
                "summary": "Upload multiple photos",
                "description": "Upload up to 3 photos at a time.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "photos"
                                ],
                                "properties": {
                                    "photos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary",
                                            "title": "photo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Photos"
                ]
            }
        },
        "/v1/api-key/list": {
            "get": {
                "operationId": "ApiKeyAdminController_list",
                "parameters": [
                    {
                        "name": "order",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Order"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "int": true,
                        "schema": {
                            "minimum": 1,
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "int": true,
                        "schema": {
                            "minimum": 1,
                            "maximum": 50,
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "q",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get users list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponsePagingDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ApiKeyDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/create": {
            "post": {
                "operationId": "ApiKeyAdminController_create",
                "summary": "create an api key",
                "parameters": [
                    {
                        "schema": {}
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKeyCreateRawRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.create"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ApiKeyDto"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "422",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "request.validation"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5030
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/update/{apiKey}/reset": {
            "patch": {
                "operationId": "ApiKeyAdminController_reset",
                "summary": "reset secret an api key",
                "parameters": [
                    {
                        "name": "apiKey",
                        "required": true,
                        "in": "path",
                        "allowEmptyValue": false,
                        "schema": {
                            "example": "40bb4b37-811d-4e74-85b2-d1cfb8f869b2",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.reset"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ApiKeyDto"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.expired"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5057
                                                }
                                            }
                                        },
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.isActiveInvalid"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5056
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.error.notFound"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5058
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/update/{apiKey}": {
            "put": {
                "operationId": "ApiKeyAdminController_update",
                "summary": "update data an api key",
                "parameters": [
                    {
                        "name": "apiKey",
                        "required": true,
                        "in": "path",
                        "allowEmptyValue": false,
                        "schema": {
                            "example": "40bb4b37-811d-4e74-85b2-d1cfb8f869b2",
                            "type": "string"
                        }
                    },
                    {
                        "schema": {}
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKeyUpdateRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.update"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.expired"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5057
                                                }
                                            }
                                        },
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.isActiveInvalid"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5056
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.error.notFound"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5058
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "422",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "request.validation"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5030
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/update/{apiKey}/inactive": {
            "patch": {
                "operationId": "ApiKeyAdminController_inactive",
                "summary": "make api key be inactive",
                "parameters": [
                    {
                        "name": "apiKey",
                        "required": true,
                        "in": "path",
                        "allowEmptyValue": false,
                        "schema": {
                            "example": "40bb4b37-811d-4e74-85b2-d1cfb8f869b2",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.inactive"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.expired"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5057
                                                }
                                            }
                                        },
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.isActiveInvalid"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5056
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.error.notFound"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5058
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/update/{apiKey}/active": {
            "patch": {
                "operationId": "ApiKeyAdminController_active",
                "summary": "make api key be active",
                "parameters": [
                    {
                        "name": "apiKey",
                        "required": true,
                        "in": "path",
                        "allowEmptyValue": false,
                        "schema": {
                            "example": "40bb4b37-811d-4e74-85b2-d1cfb8f869b2",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.active"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.expired"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5057
                                                }
                                            }
                                        },
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.isActiveInvalid"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5056
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.error.notFound"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5058
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/update/{apiKey}/date": {
            "put": {
                "operationId": "ApiKeyAdminController_updateDate",
                "summary": "update data an api key",
                "parameters": [
                    {
                        "name": "apiKey",
                        "required": true,
                        "in": "path",
                        "allowEmptyValue": false,
                        "schema": {
                            "example": "40bb4b37-811d-4e74-85b2-d1cfb8f869b2",
                            "type": "string"
                        }
                    },
                    {
                        "schema": {}
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKeyUpdateRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.update"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.expired"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5057
                                                }
                                            }
                                        },
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "apiKey.error.isActiveInvalid"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 5056
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.error.notFound"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5058
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "422",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "request.validation"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5030
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        },
        "/v1/api-key/delete/{apiKey}": {
            "delete": {
                "operationId": "ApiKeyAdminController_delete",
                "summary": "delete an api key",
                "parameters": [
                    {
                        "name": "apiKey",
                        "required": true,
                        "in": "path",
                        "allowEmptyValue": false,
                        "schema": {
                            "example": "40bb4b37-811d-4e74-85b2-d1cfb8f869b2",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-custom-lang",
                        "in": "header",
                        "description": "Custom language header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "apiKey.delete"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "403",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/ResponseDto"
                                                }
                                            ],
                                            "properties": {
                                                "message": {
                                                    "example": "policy.error.abilityForbidden"
                                                },
                                                "statusCode": {
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "408",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.requestTimeout"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5031
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResponseDto"
                                        }
                                    ],
                                    "properties": {
                                        "message": {
                                            "example": "http.serverError.internalServerError"
                                        },
                                        "statusCode": {
                                            "type": "number",
                                            "example": 5040
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "apiKey"
                ],
                "security": [
                    {
                        "accessToken": []
                    }
                ]
            }
        }
    },
    "info": {
        "title": "API",
        "description": "### REST\n\nRoutes is following REST standard (Richardson level 3)\n\n<details><summary>Detailed specification</summary>\n<p>\n\n**List:**\n  - `GET /<resources>/`\n    - Get the list of **<resources>** as admin\n  - `GET /user/<user_id>/<resources>/`\n    - Get the list of **<resources>** for a given **<user_id>**\n    - Output a **403** if logged user is not **<user_id>**\n\n**Detail:**\n  - `GET /<resources>/<resource_id>`\n    - Get the detail for **<resources>** of id **<resource_id>**\n    - Output a **404** if not found\n  - `GET /user/<user_id>/<resources>/<resource_id>`\n    - Get the list of **<resources>** for a given **user_id**\n    - Output a **404** if not found\n    - Output a **403** if:\n      - Logged user is not **<user_id>**\n      - The **<user_id>** have no access to **<resource_id>**\n\n**Creation / Edition / Replacement / Suppression:**\n  - `<METHOD>` is:\n    - **POST** for creation\n    - **PATCH** for update (one or more fields)\n    - **PUT** for replacement (all fields, not used)\n    - **DELETE** for suppression (all fields, not used)\n  - `<METHOD> /<resources>/<resource_id>`\n    - Create **<resources>** with id **<resource_id>** as admin\n    - Output a **400** if **<resource_id>** conflicts with existing **<resources>**\n  - `<METHOD> /user/<user_id>/<resources>/<resource_id>`\n    - Create **<resources>** with id **<resource_id>** as a given **user_id**\n    - Output a **409** if **<resource_id>** conflicts with existing **<resources>**\n    - Output a **403** if:\n      - Logged user is not **<user_id>**\n      - The **<user_id>** have no access to **<resource_id>**\n</p>\n</details>",
        "version": "v1.0.0",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "securitySchemes": {
            "accessToken": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http",
                "description": "Access token for authentication"
            },
            "refreshToken": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http",
                "description": "Refresh token for obtaining a new access token"
            },
            "xApiKey": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key",
                "description": "API Key for authentication"
            }
        },
        "schemas": {
            "AuthEmailLoginDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "RoleType": {
                "type": "string",
                "enum": [
                    "USER",
                    "ADMIN"
                ]
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "username": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleType"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "LoginResponseDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    },
                    "tokenExpires": {
                        "type": "number"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserDto"
                    }
                },
                "required": [
                    "token",
                    "refreshToken",
                    "tokenExpires",
                    "user"
                ]
            },
            "AuthRegisterLoginDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "phone": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password"
                ]
            },
            "AuthConfirmEmailDto": {
                "type": "object",
                "properties": {
                    "hash": {
                        "type": "string"
                    }
                },
                "required": [
                    "hash"
                ]
            },
            "AuthForgotPasswordDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    }
                },
                "required": [
                    "email"
                ]
            },
            "AuthResetPasswordDto": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "hash": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "hash"
                ]
            },
            "RefreshResponseDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    },
                    "tokenExpires": {
                        "type": "number"
                    }
                },
                "required": [
                    "token",
                    "refreshToken",
                    "tokenExpires"
                ]
            },
            "AuthUpdateDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "phone": {
                        "type": "string"
                    },
                    "oldPassword": {
                        "type": "string",
                        "minLength": 6
                    }
                }
            },
            "Order": {
                "type": "string",
                "default": "ASC",
                "enum": [
                    "ASC",
                    "DESC"
                ]
            },
            "ResponsePagingMetadataPaginationRequestDto": {
                "type": "object",
                "properties": {
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    },
                    "page": {
                        "type": "number",
                        "minimum": 1,
                        "default": 1,
                        "int": true
                    },
                    "take": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 50,
                        "default": 10,
                        "int": true
                    },
                    "q": {
                        "type": "string"
                    },
                    "availableSearch": {
                        "nullable": false,
                        "example": [
                            "name"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "availableSearch"
                ]
            },
            "ResponsePagingMetadataDto": {
                "type": "object",
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/ResponsePagingMetadataPaginationRequestDto"
                    }
                }
            },
            "PageMetaDto": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "number"
                    },
                    "take": {
                        "type": "number"
                    },
                    "itemCount": {
                        "type": "number"
                    },
                    "pageCount": {
                        "type": "number"
                    },
                    "hasPreviousPage": {
                        "type": "boolean"
                    },
                    "hasNextPage": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "page",
                    "take",
                    "itemCount",
                    "pageCount",
                    "hasPreviousPage",
                    "hasNextPage"
                ]
            },
            "ResponsePagingDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "nullable": false,
                        "description": "return specific status code for every endpoints",
                        "example": 200
                    },
                    "_metadata": {
                        "nullable": false,
                        "description": "Contain metadata about API",
                        "example": {
                            "language": "en",
                            "timestamp": 1660190937231,
                            "timezone": "Asia/Dubai",
                            "path": "/api/v1/test/hello",
                            "version": "1",
                            "pagination": {
                                "q": "Leona Collier",
                                "page": 1,
                                "take": 10,
                                "order": "ASC",
                                "availableSearch": [
                                    "name",
                                    "email"
                                ]
                            }
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResponsePagingMetadataDto"
                            }
                        ]
                    },
                    "paginationMeta": {
                        "$ref": "#/components/schemas/PageMetaDto"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    }
                },
                "required": [
                    "statusCode",
                    "_metadata",
                    "paginationMeta",
                    "data"
                ]
            },
            "ApiKeyType": {
                "type": "string",
                "description": "Type of api key",
                "enum": [
                    "SYSTEM",
                    "DEFAULT"
                ]
            },
            "ApiKeyDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active flag of api key",
                        "example": true,
                        "nullable": false
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Api Key start date",
                        "example": "2024-05-23T17:46:50.841Z",
                        "nullable": true
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Api Key end date",
                        "example": "2024-11-27T06:08:53.721Z",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Alias name of api key",
                        "example": "Lead Program Analyst",
                        "nullable": false
                    },
                    "type": {
                        "example": "DEFAULT",
                        "nullable": false,
                        "$ref": "#/components/schemas/ApiKeyType"
                    },
                    "key": {
                        "type": "string",
                        "description": "Unique key of api key",
                        "example": "nwtzvnTwRCIedYH",
                        "nullable": false
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret of api key",
                        "example": "acgWijSHcFMLlFz",
                        "nullable": false
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "hash",
                    "isActive",
                    "name",
                    "type",
                    "key",
                    "secret"
                ]
            },
            "ResponseMetadataDto": {
                "type": "object",
                "properties": {}
            },
            "ResponseDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "nullable": false,
                        "description": "return specific status code for every endpoints",
                        "example": 200
                    },
                    "_metadata": {
                        "nullable": false,
                        "description": "Contain metadata about API",
                        "example": {
                            "language": "en",
                            "timestamp": 1660190937231,
                            "timezone": "Asia/Dubai",
                            "path": "/api/v1/test/hello",
                            "version": "1",
                            "repoVersion": "1.0.0"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResponseMetadataDto"
                            }
                        ]
                    }
                },
                "required": [
                    "statusCode",
                    "_metadata"
                ]
            },
            "ApiKeyCreateRawRequestDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Api Key name",
                        "example": "Renner, Powlowski and Gleichner",
                        "maxLength": 100
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Api Key start date",
                        "example": "2025-02-23T16:58:11.567Z",
                        "nullable": true
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Api Key end date",
                        "example": "2025-05-18T05:00:15.104Z",
                        "nullable": true
                    },
                    "type": {
                        "example": "DEFAULT",
                        "$ref": "#/components/schemas/ApiKeyType"
                    },
                    "key": {
                        "type": "string",
                        "example": "fmYFbAxSWW",
                        "nullable": false,
                        "maxLength": 50
                    },
                    "secret": {
                        "type": "string",
                        "example": "QBcTNLBmV0TZ2co8QviC",
                        "nullable": false,
                        "maxLength": 100
                    }
                },
                "required": [
                    "name",
                    "type",
                    "key",
                    "secret"
                ]
            },
            "ApiKeyUpdateRequestDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Api Key name",
                        "example": "Renner, Powlowski and Gleichner",
                        "maxLength": 100
                    }
                },
                "required": [
                    "name"
                ]
            }
        }
    }
}